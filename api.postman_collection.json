{
	"info": {
		"_postman_id": "a9edd456-0e3a-4032-8c7d-20d6ffe33acf",
		"name": "api",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" alt=\"\" height=\"1530\" width=\"2162\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40452924"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "update-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/info?id=1",
							"host": [
								""
							],
							"path": [
								"info"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "upload-image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": "mahad_profile.jpg"
								}
							]
						},
						"url": {
							"raw": "/user/upload-image",
							"host": [
								""
							],
							"path": [
								"user",
								"upload-image"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": "mahad_profile.jpg"
								}
							]
						},
						"url": {
							"raw": "/user/upload-image",
							"host": [
								""
							],
							"path": [
								"user",
								"upload-image"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Function to generate a random username\r",
									"function generateRandomUsername() {\r",
									"    const adjectives = [\r",
									"        \"Cool\", \"Swift\", \"Bright\", \"Silent\", \"Bold\", \r",
									"        \"Wild\", \"Happy\", \"Clever\", \"Fierce\", \"Gentle\"\r",
									"    ];\r",
									"    const nouns = [\r",
									"        \"Tiger\", \"Eagle\", \"River\", \"Shadow\", \"Flame\", \r",
									"        \"Wolf\", \"Star\", \"Cloud\", \"Knight\", \"Fox\"\r",
									"    ];\r",
									"\r",
									"    const randomAdj = adjectives[Math.floor(Math.random() * adjectives.length)];\r",
									"    const randomNoun = nouns[Math.floor(Math.random() * nouns.length)];\r",
									"    const randomNum = Math.floor(Math.random() * 999) + 1;\r",
									"\r",
									"    return `${randomAdj}${randomNoun}${randomNum}`;\r",
									"}\r",
									"\r",
									"// Generate the username\r",
									"const username = generateRandomUsername();\r",
									"\r",
									"// Set it as an environment variable\r",
									"pm.environment.set(\"randomUsername2\", username);\r",
									"\r",
									"// Log it to the Postman console\r",
									"console.log(\"Generated Username: \" + username);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"abdullah17\",\n  \"email\": \"abdullahrehan1723@gmail.com\",\n  \"password\": \"123@Qwerty\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/signin",
							"host": [
								""
							],
							"path": [
								"auth",
								"signin"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "signup Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Function to generate a random username\r",
									"function generateRandomUsername() {\r",
									"    const adjectives = [\r",
									"        \"Cool\", \"Swift\", \"Bright\", \"Silent\", \"Bold\", \r",
									"        \"Wild\", \"Happy\", \"Clever\", \"Fierce\", \"Gentle\"\r",
									"    ];\r",
									"    const nouns = [\r",
									"        \"Tiger\", \"Eagle\", \"River\", \"Shadow\", \"Flame\", \r",
									"        \"Wolf\", \"Star\", \"Cloud\", \"Knight\", \"Fox\"\r",
									"    ];\r",
									"\r",
									"    const randomAdj = adjectives[Math.floor(Math.random() * adjectives.length)];\r",
									"    const randomNoun = nouns[Math.floor(Math.random() * nouns.length)];\r",
									"    const randomNum = Math.floor(Math.random() * 999) + 1;\r",
									"\r",
									"    return `${randomAdj}${randomNoun}${randomNum}`;\r",
									"}\r",
									"\r",
									"// Generate the username\r",
									"const username = generateRandomUsername();\r",
									"\r",
									"// Set it as an environment variable\r",
									"pm.environment.set(\"randomUsername2\", username);\r",
									"\r",
									"// Log it to the Postman console\r",
									"console.log(\"Generated Username: \" + username);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"abdullah17\",\n  \"email\": \"abdullahrehan8118@gmail.com\",\n  \"password\": \"123@Qwerty\",\n  \"role\":\"admin\",\n  \"adminRole\":\"Super Admin\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/admin/signin",
							"host": [
								""
							],
							"path": [
								"auth",
								"admin",
								"signin"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "signup Copy",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"abdullah17\",\n  \"email\": \"abdullahrehan8118@gmail.com\",\n  \"password\": \"123@Qwerty\",\n  \"role\":\"admin\",\n  \"adminRole\":\"Super Admin\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/admin/signin",
									"host": [
										""
									],
									"path": [
										"auth",
										"admin",
										"signin"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-AQbNDd0xHXGGYO5kDCE1M5Lj6A0\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 12:33:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Super Admin is created successfully \"\n}"
						},
						{
							"name": "signup Copy",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"abdullah17\",\n  \"email\": \"abdullahrehan8118@gmail.com\",\n  \"password\": \"123@Qwerty\",\n  \"role\":\"admin\",\n  \"adminRole\":\"Super Admin\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/admin/signin",
									"host": [
										""
									],
									"path": [
										"auth",
										"admin",
										"signin"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-AQbNDd0xHXGGYO5kDCE1M5Lj6A0\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 12:33:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Super Admin is created successfully \"\n}"
						},
						{
							"name": "signup Copy",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"abdullah17\",\n  \"email\": \"abdullahrehan8118@gmail.com\",\n  \"password\": \"123@Qwerty\",\n  \"role\":\"admin\",\n  \"adminRole\":\"Super Admin\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/admin/signin",
									"host": [
										""
									],
									"path": [
										"auth",
										"admin",
										"signin"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-AQbNDd0xHXGGYO5kDCE1M5Lj6A0\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 12:33:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Super Admin is created successfully \"\n}"
						}
					]
				},
				{
					"name": "verify-email",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"email\":\"abdullahrehan1723@gmail.com\",\r\n\"code\":\"681409\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/verify-email",
							"host": [
								""
							],
							"path": [
								"auth",
								"verify-email"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"abdullahrehan8118@gmail.com\",\r\n    \"password\": \"123@Qwerty\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/login",
							"host": [
								""
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"abdullahrehan8118@gmail.com\",\r\n    \"password\": \"123@Qwerty\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/login",
									"host": [
										""
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "671"
								},
								{
									"key": "ETag",
									"value": "W/\"29f-4TR/d+0W+6Ns+3JR+2MX9TCJuH0\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 12:33:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"user\": {\n            \"_id\": \"67deae1a88229a96ff189ef6\",\n            \"name\": \"abdullah17\",\n            \"email\": \"abdullahrehan8118@gmail.com\",\n            \"profilePicture\": {\n                \"original\": null,\n                \"thumbnail\": null,\n                \"blurred\": null,\n                \"_id\": \"67deae1a88229a96ff189ef5\"\n            },\n            \"emailVerified\": true,\n            \"addresses\": [],\n            \"paymentMethods\": [],\n            \"role\": \"admin\",\n            \"adminRole\": \"Super Admin\",\n            \"isBanned\": false,\n            \"securityQuestions\": [],\n            \"createdAt\": \"2025-03-22T12:33:30.914Z\",\n            \"updatedAt\": \"2025-03-22T12:33:30.914Z\",\n            \"__v\": 0\n        },\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFiZHVsbGFocmVoYW44MTE4QGdtYWlsLmNvbSIsImlhdCI6MTc0MjY0NjgyNSwiZXhwIjoxNzQzMDA2ODI1fQ.DSns06AjEZNY810pvdhqLIAyGOXU3I6_dJ06QkCng-s\"\n    }\n}"
						}
					]
				},
				{
					"name": "forgot-password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"email\":\"abdullahrehan1723@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/forgot-password",
							"host": [
								""
							],
							"path": [
								"auth",
								"forgot-password"
							]
						}
					},
					"response": [
						{
							"name": "forgot-password",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"email\":\"abdullahrehan1723@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/forgot-password",
									"host": [
										""
									],
									"path": [
										"auth",
										"forgot-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "64"
								},
								{
									"key": "ETag",
									"value": "W/\"40-f04Cy2IRr+Ab3b4PApEoT8v+6ko\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 09:29:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Verification code sent to email\"\n}"
						}
					]
				},
				{
					"name": "verify-reset-password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"email\":\"abdullahrehan1723@gmail.com\",\r\n\"code\":\"965146\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/verify-reset-password",
							"host": [
								""
							],
							"path": [
								"auth",
								"verify-reset-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "reset-password",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"abdullahrehan1723@gmail.com\",\r\n    \"code\": \"965146\",\r\n    \"newPassword\": \"Abc123##\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/reset-password",
							"host": [
								""
							],
							"path": [
								"auth",
								"reset-password"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "products",
			"item": [
				{
					"name": "create-product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admintoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "shirt",
									"type": "text"
								},
								{
									"key": "category",
									"value": "67de851b9abea1508f633266",
									"type": "text"
								},
								{
									"key": "price",
									"value": "20",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "20",
									"type": "text"
								},
								{
									"key": "description",
									"value": "lorem",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": [
										"mahad_profile.jpg",
										"Capture.PNG"
									]
								}
							]
						},
						"url": {
							"raw": "/product",
							"host": [
								""
							],
							"path": [
								"product"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "create-product",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{admintoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "shirt",
											"type": "text"
										},
										{
											"key": "category",
											"value": "67de851b9abea1508f633266",
											"type": "text"
										},
										{
											"key": "price",
											"value": "20",
											"type": "text"
										},
										{
											"key": "stock",
											"value": "20",
											"type": "text"
										},
										{
											"key": "description",
											"value": "lorem",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": [
												"mahad_profile.jpg",
												"Capture.PNG"
											]
										}
									]
								},
								"url": {
									"raw": "/product",
									"host": [
										""
									],
									"path": [
										"product"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1088"
								},
								{
									"key": "ETag",
									"value": "W/\"440-sKcOoA4PMU098FzsrQ3kDKSlznI\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 17:24:00 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Product created successfully\",\n    \"data\": {\n        \"name\": \"shirt\",\n        \"category\": \"67de851b9abea1508f633266\",\n        \"price\": 20,\n        \"description\": \"lorem\",\n        \"images\": [\n            {\n                \"original\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/original/1742664236370-mahad_profile.jpg\",\n                \"thumbnail\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/thumbnail/1742664236370-mahad_profile-thumbnail.jpg\",\n                \"blurred\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/blurred/1742664236370-mahad_profile-blurred.jpg\",\n                \"_id\": \"67def22f7dcf30d9f899ecb0\"\n            },\n            {\n                \"original\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/original/1742664236377-Capture.PNG\",\n                \"thumbnail\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/thumbnail/1742664236377-Capture-thumbnail.PNG\",\n                \"blurred\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/blurred/1742664236377-Capture-blurred.PNG\",\n                \"_id\": \"67def22f7dcf30d9f899ecb1\"\n            }\n        ],\n        \"stock\": 20,\n        \"rating\": 0,\n        \"reviews\": [],\n        \"_id\": \"67def22f7dcf30d9f899ecaf\",\n        \"createdAt\": \"2025-03-22T17:23:59.915Z\",\n        \"updatedAt\": \"2025-03-22T17:23:59.915Z\",\n        \"__v\": 0\n    }\n}"
						}
					]
				},
				{
					"name": "update-product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admintoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "SHIRT UPDATE",
									"type": "text"
								},
								{
									"key": "category",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "price",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "stock",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "images",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "/product/67deddd4f4273134d1a74f19",
							"host": [
								""
							],
							"path": [
								"product",
								"67deddd4f4273134d1a74f19"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "update-product",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{admintoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "SHIRT UPDATE",
											"type": "text"
										},
										{
											"key": "category",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "price",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "stock",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "images",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "/product/67deddd4f4273134d1a74f19",
									"host": [
										""
									],
									"path": [
										"product",
										"67deddd4f4273134d1a74f19"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1095"
								},
								{
									"key": "ETag",
									"value": "W/\"447-M9fqmpsn8eFKf8YrtIKf4jLo7vg\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 16:42:07 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Product updated successfully\",\n    \"data\": {\n        \"_id\": \"67deddd4f4273134d1a74f19\",\n        \"name\": \"SHIRT UPDATE\",\n        \"category\": \"67de851b9abea1508f633266\",\n        \"price\": 20,\n        \"description\": \"lorem\",\n        \"images\": [\n            {\n                \"original\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/original/1742659025933-mahad_profile.jpg\",\n                \"thumbnail\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/thumbnail/1742659025933-mahad_profile-thumbnail.jpg\",\n                \"blurred\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/blurred/1742659025933-mahad_profile-blurred.jpg\",\n                \"_id\": \"67deddd4f4273134d1a74f1a\"\n            },\n            {\n                \"original\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/original/1742659025937-Capture.PNG\",\n                \"thumbnail\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/thumbnail/1742659025937-Capture-thumbnail.PNG\",\n                \"blurred\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/blurred/1742659025937-Capture-blurred.PNG\",\n                \"_id\": \"67deddd4f4273134d1a74f1b\"\n            }\n        ],\n        \"stock\": 20,\n        \"rating\": 0,\n        \"reviews\": [],\n        \"createdAt\": \"2025-03-22T15:57:09.008Z\",\n        \"updatedAt\": \"2025-03-22T16:42:07.007Z\",\n        \"__v\": 0\n    }\n}"
						},
						{
							"name": "update-product",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{admintoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "SHIRT UPDATE",
											"type": "text"
										},
										{
											"key": "category",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "price",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "stock",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "images",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "/product/67deddd4f4273134d1a74f19",
									"host": [
										""
									],
									"path": [
										"product",
										"67deddd4f4273134d1a74f19"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1095"
								},
								{
									"key": "ETag",
									"value": "W/\"447-M9fqmpsn8eFKf8YrtIKf4jLo7vg\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 16:42:07 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Product updated successfully\",\n    \"data\": {\n        \"_id\": \"67deddd4f4273134d1a74f19\",\n        \"name\": \"SHIRT UPDATE\",\n        \"category\": \"67de851b9abea1508f633266\",\n        \"price\": 20,\n        \"description\": \"lorem\",\n        \"images\": [\n            {\n                \"original\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/original/1742659025933-mahad_profile.jpg\",\n                \"thumbnail\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/thumbnail/1742659025933-mahad_profile-thumbnail.jpg\",\n                \"blurred\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/blurred/1742659025933-mahad_profile-blurred.jpg\",\n                \"_id\": \"67deddd4f4273134d1a74f1a\"\n            },\n            {\n                \"original\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/original/1742659025937-Capture.PNG\",\n                \"thumbnail\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/thumbnail/1742659025937-Capture-thumbnail.PNG\",\n                \"blurred\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/blurred/1742659025937-Capture-blurred.PNG\",\n                \"_id\": \"67deddd4f4273134d1a74f1b\"\n            }\n        ],\n        \"stock\": 20,\n        \"rating\": 0,\n        \"reviews\": [],\n        \"createdAt\": \"2025-03-22T15:57:09.008Z\",\n        \"updatedAt\": \"2025-03-22T16:42:07.007Z\",\n        \"__v\": 0\n    }\n}"
						},
						{
							"name": "update-product",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{admintoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "SHIRT UPDATE",
											"type": "text"
										},
										{
											"key": "category",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "price",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "stock",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "images",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "/product/67deddd4f4273134d1a74f19",
									"host": [
										""
									],
									"path": [
										"product",
										"67deddd4f4273134d1a74f19"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1095"
								},
								{
									"key": "ETag",
									"value": "W/\"447-M9fqmpsn8eFKf8YrtIKf4jLo7vg\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 16:42:07 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Product updated successfully\",\n    \"data\": {\n        \"_id\": \"67deddd4f4273134d1a74f19\",\n        \"name\": \"SHIRT UPDATE\",\n        \"category\": \"67de851b9abea1508f633266\",\n        \"price\": 20,\n        \"description\": \"lorem\",\n        \"images\": [\n            {\n                \"original\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/original/1742659025933-mahad_profile.jpg\",\n                \"thumbnail\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/thumbnail/1742659025933-mahad_profile-thumbnail.jpg\",\n                \"blurred\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/blurred/1742659025933-mahad_profile-blurred.jpg\",\n                \"_id\": \"67deddd4f4273134d1a74f1a\"\n            },\n            {\n                \"original\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/original/1742659025937-Capture.PNG\",\n                \"thumbnail\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/thumbnail/1742659025937-Capture-thumbnail.PNG\",\n                \"blurred\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/blurred/1742659025937-Capture-blurred.PNG\",\n                \"_id\": \"67deddd4f4273134d1a74f1b\"\n            }\n        ],\n        \"stock\": 20,\n        \"rating\": 0,\n        \"reviews\": [],\n        \"createdAt\": \"2025-03-22T15:57:09.008Z\",\n        \"updatedAt\": \"2025-03-22T16:42:07.007Z\",\n        \"__v\": 0\n    }\n}"
						}
					]
				},
				{
					"name": "delete-product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admintoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/product/67decfa29657d6e1d45ea4ba",
							"host": [
								""
							],
							"path": [
								"product",
								"67decfa29657d6e1d45ea4ba"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete-product-image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admintoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/product/67def22f7dcf30d9f899ecaf/images/0",
							"host": [
								""
							],
							"path": [
								"product",
								"67def22f7dcf30d9f899ecaf",
								"images",
								"0"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "delete-product Copy",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{admintoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/product/67def22f7dcf30d9f899ecaf/images/0",
									"host": [
										""
									],
									"path": [
										"product",
										"67def22f7dcf30d9f899ecaf",
										"images",
										"0"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "691"
								},
								{
									"key": "ETag",
									"value": "W/\"2b3-0l/fGlNKNbsKvwehHFJe665WwUQ\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 17:25:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Image deleted successfully\",\n    \"data\": {\n        \"_id\": \"67def22f7dcf30d9f899ecaf\",\n        \"name\": \"shirt\",\n        \"category\": \"67de851b9abea1508f633266\",\n        \"price\": 20,\n        \"description\": \"lorem\",\n        \"images\": [\n            {\n                \"original\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/original/1742664236377-Capture.PNG\",\n                \"thumbnail\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/thumbnail/1742664236377-Capture-thumbnail.PNG\",\n                \"blurred\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/blurred/1742664236377-Capture-blurred.PNG\",\n                \"_id\": \"67def22f7dcf30d9f899ecb1\"\n            }\n        ],\n        \"stock\": 20,\n        \"rating\": 0,\n        \"reviews\": [],\n        \"createdAt\": \"2025-03-22T17:23:59.915Z\",\n        \"updatedAt\": \"2025-03-22T17:24:46.092Z\",\n        \"__v\": 1\n    }\n}"
						}
					]
				},
				{
					"name": "get-all-products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/product",
							"host": [
								""
							],
							"path": [
								"product"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "get-all-products",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/product",
									"host": [
										""
									],
									"path": [
										"product"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1165"
								},
								{
									"key": "ETag",
									"value": "W/\"48d-hMVeHLnIrVOzKEJoQC5ZYnhLn/w\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 17:25:41 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Products retrieved successfully\",\n    \"data\": [\n        {\n            \"_id\": \"67deddd4f4273134d1a74f19\",\n            \"name\": \"SHIRT UPDATE\",\n            \"category\": {\n                \"_id\": \"67de851b9abea1508f633266\",\n                \"name\": \"Men's Clothing\",\n                \"description\": \"A wide range of apparel designed specifically for men.\"\n            },\n            \"price\": 20,\n            \"description\": \"lorem\",\n            \"images\": [],\n            \"stock\": 20,\n            \"rating\": 0,\n            \"reviews\": [],\n            \"createdAt\": \"2025-03-22T15:57:09.008Z\",\n            \"updatedAt\": \"2025-03-22T17:12:45.846Z\",\n            \"__v\": 2\n        },\n        {\n            \"_id\": \"67def22f7dcf30d9f899ecaf\",\n            \"name\": \"shirt\",\n            \"category\": {\n                \"_id\": \"67de851b9abea1508f633266\",\n                \"name\": \"Men's Clothing\",\n                \"description\": \"A wide range of apparel designed specifically for men.\"\n            },\n            \"price\": 20,\n            \"description\": \"lorem\",\n            \"images\": [\n                {\n                    \"original\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/original/1742664236377-Capture.PNG\",\n                    \"thumbnail\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/thumbnail/1742664236377-Capture-thumbnail.PNG\",\n                    \"blurred\": \"https://abd-ecom.s3.eu-north-1.amazonaws.com/profile-images/blurred/1742664236377-Capture-blurred.PNG\",\n                    \"_id\": \"67def22f7dcf30d9f899ecb1\"\n                }\n            ],\n            \"stock\": 20,\n            \"rating\": 0,\n            \"reviews\": [],\n            \"createdAt\": \"2025-03-22T17:23:59.915Z\",\n            \"updatedAt\": \"2025-03-22T17:24:46.092Z\",\n            \"__v\": 1\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "get-product-by-id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/product/67decc8e46487da3f6bccb9e",
							"host": [
								""
							],
							"path": [
								"product",
								"67decc8e46487da3f6bccb9e"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "orders",
			"item": [
				{
					"name": "create-new-order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user\": \"507f1f77bcf86cd799439011\",\r\n  \"products\": [\r\n    { \"product\": \"507f1f77bcf86cd799439012\", \"quantity\": 2 }\r\n  ],\r\n  \"totalAmount\": 199.98,\r\n  \"shippingAddress\": \"507f1f77bcf86cd799439013\",\r\n  \"paymentMethod\": \"507f1f77bcf86cd799439014\",\r\n  \"promoCode\": \"507f1f77bcf86cd799439015\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/order",
							"host": [
								""
							],
							"path": [
								"order"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "update-order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"Shipped\",\r\n  \"shippedAt\": \"2025-03-20T10:00:00Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/order/507f1f77bcf86cd799439012",
							"host": [
								""
							],
							"path": [
								"order",
								"507f1f77bcf86cd799439012"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete-order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/order/507f1f77bcf86cd799439012",
							"host": [
								""
							],
							"path": [
								"order",
								"507f1f77bcf86cd799439012"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-all-orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/order",
							"host": [
								""
							],
							"path": [
								"order"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/order/507f1f77bcf86cd799439012",
							"host": [
								""
							],
							"path": [
								"order",
								"507f1f77bcf86cd799439012"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "promo",
			"item": [
				{
					"name": "create-promo-code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"SAVE10\",\r\n  \"discount\": 10,\r\n  \"expiryDate\": \"2025-12-31\",\r\n  \"usageLimit\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/promo",
							"host": [
								""
							],
							"path": [
								"promo"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "verify-promo-code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"SAVE10\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/promo",
							"host": [
								""
							],
							"path": [
								"promo"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "update-promo-code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"discount\": 15,\r\n  \"expiryDate\": \"2026-01-31\",\r\n  \"isActive\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/promo",
							"host": [
								""
							],
							"path": [
								"promo"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete-promo-code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/promo/507f1f77bcf86cd799439011",
							"host": [
								""
							],
							"path": [
								"promo",
								"507f1f77bcf86cd799439011"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-promo-code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/promo/507f1f77bcf86cd799439011",
							"host": [
								""
							],
							"path": [
								"promo",
								"507f1f77bcf86cd799439011"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-all-promo-codes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/promo",
							"host": [
								""
							],
							"path": [
								"promo"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "admin",
			"item": [
				{
					"name": "get-all-users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/admin/users",
							"host": [
								""
							],
							"path": [
								"admin",
								"users"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "get-all-users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/admin/users",
									"host": [
										""
									],
									"path": [
										"admin",
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "881"
								},
								{
									"key": "ETag",
									"value": "W/\"371-EkndqaXKToQzwN/yEH3xwuMWGks\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 11:50:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Users retrieved successfully\",\n    \"data\": {\n        \"users\": [\n            {\n                \"_id\": \"67de7fbb7e3143b007383ee0\",\n                \"name\": \"abdullah17\",\n                \"email\": \"abdullahrehan1723@gmail.com\",\n                \"profilePicture\": {\n                    \"original\": null,\n                    \"thumbnail\": null,\n                    \"blurred\": null,\n                    \"_id\": \"67de7fbb7e3143b007383edf\"\n                },\n                \"emailVerified\": true,\n                \"addresses\": [],\n                \"paymentMethods\": [],\n                \"role\": \"user\",\n                \"isBanned\": false,\n                \"securityQuestions\": [],\n                \"createdAt\": \"2025-03-22T09:15:39.505Z\",\n                \"updatedAt\": \"2025-03-22T09:32:41.472Z\",\n                \"__v\": 0\n            },\n            {\n                \"_id\": \"67dea3dd28824eca56a138ba\",\n                \"name\": \"abdullah17\",\n                \"email\": \"abdullahrehan8118@gmail.com\",\n                \"profilePicture\": {\n                    \"original\": null,\n                    \"thumbnail\": null,\n                    \"blurred\": null,\n                    \"_id\": \"67dea3dd28824eca56a138b9\"\n                },\n                \"emailVerified\": false,\n                \"addresses\": [],\n                \"paymentMethods\": [],\n                \"role\": \"admin\",\n                \"adminRole\": \"Super Admin\",\n                \"isBanned\": false,\n                \"securityQuestions\": [],\n                \"createdAt\": \"2025-03-22T11:49:49.195Z\",\n                \"updatedAt\": \"2025-03-22T11:49:49.195Z\",\n                \"__v\": 0\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "add-category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Electronics\",\r\n  \"description\": \"Category for electronic products\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/admin/categories",
							"host": [
								""
							],
							"path": [
								"admin",
								"categories"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete-all-users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "/admin/delete-all",
							"host": [
								""
							],
							"path": [
								"admin",
								"delete-all"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/admin/delete/67dea3dd28824eca56a138ba",
							"host": [
								""
							],
							"path": [
								"admin",
								"delete",
								"67dea3dd28824eca56a138ba"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "delete-user",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/admin/delete/67dea3dd28824eca56a138ba",
									"host": [
										""
									],
									"path": [
										"admin",
										"delete",
										"67dea3dd28824eca56a138ba"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "168"
								},
								{
									"key": "ETag",
									"value": "W/\"a8-VT9BMhf9tmhqiV+2nJFcoz94a9Y\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 12:33:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"User deleted successfully\",\n    \"data\": {\n        \"deletedUser\": {\n            \"id\": \"67dea3dd28824eca56a138ba\",\n            \"email\": \"abdullahrehan8118@gmail.com\",\n            \"name\": \"abdullah17\"\n        }\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "address",
			"item": [
				{
					"name": "create-new-address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Jane Doe\",\r\n  \"street\": \"789 Oak St\",\r\n  \"city\": \"Somecity\",\r\n  \"state\": \"TX\",\r\n  \"zipCode\": \"67890\",\r\n  \"country\": \"USA\",\r\n  \"phone\": \"+1987654321\",\r\n  \"isDefault\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/address",
							"host": [
								""
							],
							"path": [
								"user",
								"address"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "update-address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"street\": \"101 Pine St\",\r\n  \"phone\": \"+1123456789\",\r\n  \"isDefault\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/address?id=123",
							"host": [
								""
							],
							"path": [
								"user",
								"address"
							],
							"query": [
								{
									"key": "id",
									"value": "123"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete-address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/address?id=123",
							"host": [
								""
							],
							"path": [
								"user",
								"address"
							],
							"query": [
								{
									"key": "id",
									"value": "123"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-all-addresses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/address",
							"host": [
								""
							],
							"path": [
								"user",
								"address"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-addresses-by-Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/address?id=123",
							"host": [
								""
							],
							"path": [
								"user",
								"address"
							],
							"query": [
								{
									"key": "id",
									"value": "123"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "payment methode",
			"item": [
				{
					"name": "create-new-payment-methode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user\": \"507f1f77bcf86cd799439011\",\r\n  \"type\": \"Credit Card\",\r\n  \"paymentGatewayToken\": \"tok_visa_123456789\",\r\n  \"last4\": \"4242\",\r\n  \"isDefault\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/payment-methods",
							"host": [
								""
							],
							"path": [
								"payment-methods"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "update-payment-methode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"isDefault\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/payment-methods",
							"host": [
								""
							],
							"path": [
								"payment-methods"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete-payment-methode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/payment-methods/507f1f77bcf86cd799439012",
							"host": [
								""
							],
							"path": [
								"payment-methods",
								"507f1f77bcf86cd799439012"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-all-payment-methods",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/payment-methods?userId=507f1f77bcf86cd799439011",
							"host": [
								""
							],
							"path": [
								"payment-methods"
							],
							"query": [
								{
									"key": "userId",
									"value": "507f1f77bcf86cd799439011"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-payment-method",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/payment-methods/507f1f77bcf86cd799439012",
							"host": [
								""
							],
							"path": [
								"payment-methods",
								"507f1f77bcf86cd799439012"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "process-payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"orderId\": \"507f1f77bcf86cd799439011\",\r\n  \"paymentMethodId\": \"507f1f77bcf86cd799439012\",\r\n  \"amount\": 100.00\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/payments",
							"host": [
								""
							],
							"path": [
								"payments"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-all-payments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/payments",
							"host": [
								""
							],
							"path": [
								"payments"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/payments/507f1f77bcf86cd799439012",
							"host": [
								""
							],
							"path": [
								"payments",
								"507f1f77bcf86cd799439012"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "admin-payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/admin/payments",
							"host": [
								""
							],
							"path": [
								"admin",
								"payments"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/refunds",
							"host": [
								""
							],
							"path": [
								"refunds"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "webhooks-payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/webhooks/payment",
							"host": [
								""
							],
							"path": [
								"webhooks",
								"payment"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "category",
			"item": [
				{
					"name": "create-new-category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admintoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Polo Shirts\",\r\n    \"description\": \"Collared shirts blending casual and semi-formal styles.\",\r\n     \"parentCategory\": \"67de851b9abea1508f633266\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/product/category",
							"host": [
								""
							],
							"path": [
								"product",
								"category"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "create-new-category",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{admintoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Polo Shirts\",\r\n    \"description\": \"Collared shirts blending casual and semi-formal styles.\",\r\n     \"parentCategory\": \"67de851b9abea1508f633266\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/product/category",
									"host": [
										""
									],
									"path": [
										"product",
										"category"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "335"
								},
								{
									"key": "ETag",
									"value": "W/\"14f-2DL+efczS80qBH/laPIMuo3iq+8\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 12:47:07 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Category created successfully\",\n    \"data\": {\n        \"category\": {\n            \"name\": \"Polo Shirts\",\n            \"description\": \"Collared shirts blending casual and semi-formal styles.\",\n            \"parentCategory\": \"67de851b9abea1508f633266\",\n            \"_id\": \"67deb14b88229a96ff189f1b\",\n            \"createdAt\": \"2025-03-22T12:47:07.639Z\",\n            \"updatedAt\": \"2025-03-22T12:47:07.639Z\",\n            \"__v\": 0\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "update-category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admintoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  //\"name\": \"Polo shirts update\",\r\n  \"description\":\"Collared shirts blending casual and semi-formal styles update\"\r\n  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/product/category/67deb14b88229a96ff189f1b",
							"host": [
								""
							],
							"path": [
								"product",
								"category",
								"67deb14b88229a96ff189f1b"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "update-category",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{admintoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  //\"name\": \"Polo shirts update\",\r\n  \"description\":\"Collared shirts blending casual and semi-formal styles update\"\r\n  \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/product/category/67deb14b88229a96ff189f1b",
									"host": [
										""
									],
									"path": [
										"product",
										"category",
										"67deb14b88229a96ff189f1b"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "348"
								},
								{
									"key": "ETag",
									"value": "W/\"15c-u0hg5qFuvRzuwlmkXcvrpU+hzrU\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 12:51:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Category updated successfully\",\n    \"data\": {\n        \"category\": {\n            \"_id\": \"67deb14b88229a96ff189f1b\",\n            \"name\": \"Polo shirts update\",\n            \"description\": \"Collared shirts blending casual and semi-formal styles update\",\n            \"parentCategory\": \"67de851b9abea1508f633266\",\n            \"createdAt\": \"2025-03-22T12:47:07.639Z\",\n            \"updatedAt\": \"2025-03-22T12:51:32.078Z\",\n            \"__v\": 0\n        }\n    }\n}"
						},
						{
							"name": "update-category",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{admintoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  //\"name\": \"Polo shirts update\",\r\n  \"description\":\"Collared shirts blending casual and semi-formal styles update\"\r\n  \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/product/category/67deb14b88229a96ff189f1b",
									"host": [
										""
									],
									"path": [
										"product",
										"category",
										"67deb14b88229a96ff189f1b"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "348"
								},
								{
									"key": "ETag",
									"value": "W/\"15c-u0hg5qFuvRzuwlmkXcvrpU+hzrU\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 12:51:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Category updated successfully\",\n    \"data\": {\n        \"category\": {\n            \"_id\": \"67deb14b88229a96ff189f1b\",\n            \"name\": \"Polo shirts update\",\n            \"description\": \"Collared shirts blending casual and semi-formal styles update\",\n            \"parentCategory\": \"67de851b9abea1508f633266\",\n            \"createdAt\": \"2025-03-22T12:47:07.639Z\",\n            \"updatedAt\": \"2025-03-22T12:51:32.078Z\",\n            \"__v\": 0\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "delete-category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admintoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/product/category/67dcc17e9a6320f99e86c0e2",
							"host": [
								""
							],
							"path": [
								"product",
								"category",
								"67dcc17e9a6320f99e86c0e2"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "delete-category",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{admintoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/product/category/67dcc17e9a6320f99e86c0e2",
									"host": [
										""
									],
									"path": [
										"product",
										"category",
										"67dcc17e9a6320f99e86c0e2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "139"
								},
								{
									"key": "ETag",
									"value": "W/\"8b-SzcU1zP46CIrrYaJVM6AOrHfg1M\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 12:40:06 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Category deleted successfully\",\n    \"data\": {\n        \"deletedCategory\": {\n            \"id\": \"67dcc17e9a6320f99e86c0e2\",\n            \"name\": \"Electronics\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "get-all-category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/product/category",
							"host": [
								""
							],
							"path": [
								"product",
								"category"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "get-all-category",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/product/category",
									"host": [
										""
									],
									"path": [
										"product",
										"category"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1405"
								},
								{
									"key": "ETag",
									"value": "W/\"57d-RwumrSXr7Sj6UWtreNSK5WEOPl8\""
								},
								{
									"key": "Date",
									"value": "Sat, 22 Mar 2025 12:53:38 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Categories retrieved successfully\",\n    \"data\": {\n        \"categories\": [\n            {\n                \"_id\": \"67de851b9abea1508f633266\",\n                \"name\": \"Men's Clothing\",\n                \"description\": \"A wide range of apparel designed specifically for men.\",\n                \"parentCategory\": null,\n                \"createdAt\": \"2025-03-22T09:38:35.824Z\",\n                \"updatedAt\": \"2025-03-22T09:38:35.824Z\",\n                \"__v\": 0\n            },\n            {\n                \"_id\": \"67deb0ea88229a96ff189f0c\",\n                \"name\": \"T-Shirts\",\n                \"description\": \"Versatile short-sleeve shirts in various styles and colors.\",\n                \"parentCategory\": {\n                    \"_id\": \"67de851b9abea1508f633266\",\n                    \"name\": \"Men's Clothing\",\n                    \"description\": \"A wide range of apparel designed specifically for men.\"\n                },\n                \"createdAt\": \"2025-03-22T12:45:30.034Z\",\n                \"updatedAt\": \"2025-03-22T12:45:30.034Z\",\n                \"__v\": 0\n            },\n            {\n                \"_id\": \"67deb10e88229a96ff189f12\",\n                \"name\": \"Jeans\",\n                \"description\": \"Durable denim pants for a rugged, casual look.\",\n                \"parentCategory\": {\n                    \"_id\": \"67de851b9abea1508f633266\",\n                    \"name\": \"Men's Clothing\",\n                    \"description\": \"A wide range of apparel designed specifically for men.\"\n                },\n                \"createdAt\": \"2025-03-22T12:46:06.152Z\",\n                \"updatedAt\": \"2025-03-22T12:46:06.152Z\",\n                \"__v\": 0\n            },\n            {\n                \"_id\": \"67deb14b88229a96ff189f1b\",\n                \"name\": \"Polo shirts update\",\n                \"description\": \"Collared shirts blending casual and semi-formal styles update\",\n                \"parentCategory\": {\n                    \"_id\": \"67de851b9abea1508f633266\",\n                    \"name\": \"Men's Clothing\",\n                    \"description\": \"A wide range of apparel designed specifically for men.\"\n                },\n                \"createdAt\": \"2025-03-22T12:47:07.639Z\",\n                \"updatedAt\": \"2025-03-22T12:51:32.078Z\",\n                \"__v\": 0\n            }\n        ]\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "cart",
			"item": [
				{
					"name": "add-cart-item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"productId\": \"67def22f7dcf30d9f899ecaf\", \"quantity\": 2 }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/cart",
							"host": [
								""
							],
							"path": [
								"user",
								"cart"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "update-cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"productId\": \"507f1f77bcf86cd799439011\", \"quantity\": 3 }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/cart",
							"host": [
								""
							],
							"path": [
								"user",
								"cart"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/cart",
							"host": [
								""
							],
							"path": [
								"user",
								"cart"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "clear-cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/cart",
							"host": [
								""
							],
							"path": [
								"user",
								"cart"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete-cart-item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"productId\": \"507f1f77bcf86cd799439011\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/cart",
							"host": [
								""
							],
							"path": [
								"user",
								"cart"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "wishlist",
			"item": [
				{
					"name": "create-wishlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Jane Doe\",\r\n  \"street\": \"789 Oak St\",\r\n  \"city\": \"Somecity\",\r\n  \"state\": \"TX\",\r\n  \"zipCode\": \"67890\",\r\n  \"country\": \"USA\",\r\n  \"phone\": \"+1987654321\",\r\n  \"isDefault\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/wishlist",
							"host": [
								""
							],
							"path": [
								"user",
								"wishlist"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "update-wishlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"products\": [\"507f1f77bcf86cd799439011\", \"507f1f77bcf86cd799439012\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/wishlist/507f1f77bcf86cd799439011",
							"host": [
								""
							],
							"path": [
								"user",
								"wishlist",
								"507f1f77bcf86cd799439011"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete-wishlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/wishlist/507f1f77bcf86cd799439011",
							"host": [
								""
							],
							"path": [
								"user",
								"wishlist",
								"507f1f77bcf86cd799439011"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-wishlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/wishlist",
							"host": [
								""
							],
							"path": [
								"user",
								"wishlist"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "add-product-wishlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": \"507f1f77bcf86cd799439011\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/wishlist",
							"host": [
								""
							],
							"path": [
								"user",
								"wishlist"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "remove-product-wishlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": \"507f1f77bcf86cd799439011\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/wishlist",
							"host": [
								""
							],
							"path": [
								"user",
								"wishlist"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "review",
			"item": [
				{
					"name": "add-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"product\": \"507f1f77bcf86cd799439011\",\r\n  \"rating\": 4,\r\n  \"comment\": \"Great product, fast shipping!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/review",
							"host": [
								""
							],
							"path": [
								"review"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "update-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rating\": 5,\r\n  \"comment\": \"Even better than I thought!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/review/507f1f77bcf86cd799439012",
							"host": [
								""
							],
							"path": [
								"review",
								"507f1f77bcf86cd799439012"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/review/507f1f77bcf86cd799439012",
							"host": [
								""
							],
							"path": [
								"review",
								"507f1f77bcf86cd799439012"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-all-reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/review",
							"host": [
								""
							],
							"path": [
								"review"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "get-all-reviews",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/review",
									"host": [
										""
									],
									"path": [
										"review"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "410"
								},
								{
									"key": "ETag",
									"value": "W/\"19a-alBV6WT86tg48kEiEDthQU4dlsA\""
								},
								{
									"key": "Date",
									"value": "Mon, 24 Mar 2025 09:58:05 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Reviews retrieved successfully\",\n    \"data\": {\n        \"reviews\": [\n            {\n                \"_id\": \"67e12c85d4b04421e76c5841\",\n                \"user\": {\n                    \"_id\": \"67de7fbb7e3143b007383ee0\",\n                    \"name\": \"abdullah17\"\n                },\n                \"product\": {\n                    \"_id\": \"67deddd4f4273134d1a74f19\",\n                    \"name\": \"SHIRT UPDATE\"\n                },\n                \"rating\": 5,\n                \"comment\": \"Even better than I thought!\",\n                \"createdAt\": \"2025-03-24T09:57:25.070Z\",\n                \"updatedAt\": \"2025-03-24T09:57:58.743Z\",\n                \"__v\": 0\n            }\n        ],\n        \"total\": 1,\n        \"page\": 1,\n        \"limit\": 10\n    }\n}"
						}
					]
				},
				{
					"name": "get-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/review/507f1f77bcf86cd799439012",
							"host": [
								""
							],
							"path": [
								"review",
								"507f1f77bcf86cd799439012"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "get-review",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/review/67e12c85d4b04421e76c5841",
									"host": [
										""
									],
									"path": [
										"review",
										"67e12c85d4b04421e76c5841"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "365"
								},
								{
									"key": "ETag",
									"value": "W/\"16d-AhXAsJCZPf4zj06f2tD/meThVyo\""
								},
								{
									"key": "Date",
									"value": "Mon, 24 Mar 2025 09:59:08 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Review retrieved successfully\",\n    \"data\": {\n        \"_id\": \"67e12c85d4b04421e76c5841\",\n        \"user\": {\n            \"_id\": \"67de7fbb7e3143b007383ee0\",\n            \"name\": \"abdullah17\"\n        },\n        \"product\": {\n            \"_id\": \"67deddd4f4273134d1a74f19\",\n            \"name\": \"SHIRT UPDATE\"\n        },\n        \"rating\": 5,\n        \"comment\": \"Even better than I thought!\",\n        \"createdAt\": \"2025-03-24T09:57:25.070Z\",\n        \"updatedAt\": \"2025-03-24T09:57:58.743Z\",\n        \"__v\": 0\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "complaint",
			"item": [
				{
					"name": "create-new-complaint",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userId\": \"507f1f77bcf86cd799439011\",\r\n  \"orderId\": \"507f1f77bcf86cd799439012\",\r\n  \"message\": \"Product was damaged upon delivery\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/complaint",
							"host": [
								""
							],
							"path": [
								"user",
								"complaint"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "update-complaint",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"Resolved\",\r\n  \"response\": \"Weâ€™ve shipped a replacement product.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/complaint/507f1f77bcf86cd799439013",
							"host": [
								""
							],
							"path": [
								"user",
								"complaint",
								"507f1f77bcf86cd799439013"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete-complaint",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/complaint/507f1f77bcf86cd799439013",
							"host": [
								""
							],
							"path": [
								"user",
								"complaint",
								"507f1f77bcf86cd799439013"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-all-complaints",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/complaint",
							"host": [
								""
							],
							"path": [
								"user",
								"complaint"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-complaint",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/user/complaint/507f1f77bcf86cd799439013",
							"host": [
								""
							],
							"path": [
								"user",
								"complaint",
								"507f1f77bcf86cd799439013"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "inventory",
			"item": [
				{
					"name": "add-new-inventory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": \"507f1f77bcf86cd799439011\",\r\n  \"transactionType\": \"restock\",\r\n  \"quantity\": 50\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/product/inventory",
							"host": [
								""
							],
							"path": [
								"product",
								"inventory"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "update-inventory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"quantity\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/product/inventory/507f1f77bcf86cd799439012",
							"host": [
								""
							],
							"path": [
								"product",
								"inventory",
								"507f1f77bcf86cd799439012"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete-inventory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/product/inventory/507f1f77bcf86cd799439012",
							"host": [
								""
							],
							"path": [
								"product",
								"inventory",
								"507f1f77bcf86cd799439012"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-all-inventory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/product/inventory",
							"host": [
								""
							],
							"path": [
								"product",
								"inventory"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get-inventory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/product/inventory/507f1f77bcf86cd799439013",
							"host": [
								""
							],
							"path": [
								"product",
								"inventory",
								"507f1f77bcf86cd799439013"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:80/api"
		},
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "token",
			"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFiZHVsbGFocmVoYW4xNzIzQGdtYWlsLmNvbSIsImlhdCI6MTc0MjgwODg4NCwiZXhwIjoxNzQzMTY4ODg0fQ.xB9rOYsPaAQDu5QBUOFgio98NieICXdfML7NYTw9Bk8",
			"type": "string"
		},
		{
			"key": "admintoken",
			"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFiZHVsbGFocmVoYW44MTE4QGdtYWlsLmNvbSIsImlhdCI6MTc0MjY0NjgyNSwiZXhwIjoxNzQzMDA2ODI1fQ.DSns06AjEZNY810pvdhqLIAyGOXU3I6_dJ06QkCng-s",
			"type": "string"
		}
	]
}